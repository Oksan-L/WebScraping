# from langdetect import detect
# import sqlite3
#
# conn = sqlite3.connect("dou.db")
# cursor = conn.cursor()
#
# # –í–∏—Ç—è–≥ –≤—Å—ñ—Ö –æ–ø–∏—Å—ñ–≤
# cursor.execute("SELECT id, description FROM vacancies")
# rows = cursor.fetchall()
#
# # –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É language, —è–∫—â–æ —â–µ –Ω–µ–º–∞
# cursor.execute("ALTER TABLE vacancies ADD COLUMN language TEXT")
#
# # –í–∏–∑–Ω–∞—á–∞—î–º–æ –º–æ–≤—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–ø–∏—Å—É
# for vacancy_id, description in rows:
#     try:
#         lang = detect(description)
#     except:
#         lang = "unknown"
#
#     cursor.execute("UPDATE vacancies SET language = ? WHERE id = ?", (lang, vacancy_id))
#
# conn.commit()
# conn.close()
#
# print("‚úÖ –ú–æ–≤–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –±–∞–∑—É.")

import sqlite3
from langdetect import detect, LangDetectException

def detect_language_of_descriptions(db_path: str, table: str):
    # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    print(f"üîç –ü—Ä–∞—Ü—é—î–º–æ –∑ –±–∞–∑–æ—é: {db_path}")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ–ª–æ–Ω–∫–∞ language ‚Äî –¥–æ–¥–∞—î–º–æ, —è–∫—â–æ –Ω—ñ
    try:
        cursor.execute(f"ALTER TABLE {table} ADD COLUMN language TEXT")
        print("‚ûï –î–æ–¥–∞–Ω–æ –∫–æ–ª–æ–Ω–∫—É 'language'")
    except sqlite3.OperationalError:
        print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ 'language' –≤–∂–µ —ñ—Å–Ω—É—î ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ")

    # –í–∏—Ç—è–≥—É—î–º–æ –∑–∞–ø–∏—Å–∏, –¥–µ —â–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ –º–æ–≤—É
    cursor.execute(f"SELECT id, description FROM {table} WHERE language IS NULL OR language = ''")
    rows = cursor.fetchall()

    for vacancy_id, description in rows:
        try:
            lang = detect(description)
        except (LangDetectException, TypeError):
            lang = "unknown"

        cursor.execute(f"UPDATE {table} SET language = ? WHERE id = ?", (lang, vacancy_id))

    conn.commit()
    conn.close()
    print(f"‚úÖ –ú–æ–≤—É –≤–∏–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è {len(rows)} –∑–∞–ø–∏—Å—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—ñ '{table}'.")

# –ó–∞–ø—É—Å–∫ –¥–ª—è –æ–±–æ—Ö –±–∞–∑:
detect_language_of_descriptions("dou.db", "vacancies")
detect_language_of_descriptions("workua.db", "vacancies")
